{
	"info": {
		"_postman_id": "8e696caa-f158-410a-9c86-636529b6df4f",
		"name": "MyApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23362539"
	},
	"item": [
		{
			"name": "My-Exam",
			"item": [
				{
					"name": "corn",
					"item": [
						{
							"name": "sys-data",
							"item": [
								{
									"name": "getList",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/sys/data",
											"host": [
												"{{url}}"
											],
											"path": [
												"sys",
												"data"
											]
										}
									},
									"response": []
								},
								{
									"name": "add",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"自然拼读的单元信息\",\r\n    \"code\": \"read-master\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/sys/data",
											"host": [
												"{{url}}"
											],
											"path": [
												"sys",
												"data"
											]
										}
									},
									"response": []
								},
								{
									"name": "edit",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"2\",\r\n    \"value\": \"[{\\\"ids\\\":[32,33,34,35],\\\"subTitle\\\":\\\"at,an,ap,ad\\\"},{\\\"ids\\\":[36,37,38,39],\\\"subTitle\\\":\\\"am,ag,ash,amp\\\"},{\\\"ids\\\":[40,41,42,43],\\\"subTitle\\\":\\\"and,ack,ant,ed\\\"},{\\\"ids\\\":[44,45,46,47],\\\"subTitle\\\":\\\"en,et,eck,ell\\\"},{\\\"ids\\\":[48,49,50,51],\\\"subTitle\\\":\\\"end,est,ip,it\\\"},{\\\"ids\\\":[52,53,54,55],\\\"subTitle\\\":\\\"ig,in,ing,ick\\\"},{\\\"ids\\\":[57,58,59,60],\\\"subTitle\\\":\\\"ill,ish,ink,og\\\"},{\\\"ids\\\":[61,63,64,65],\\\"subTitle\\\":\\\"op,ot,ock,un\\\"},{\\\"ids\\\":[66,67,68,69],\\\"subTitle\\\":\\\"ug,ush,uck,unk\\\"},{\\\"ids\\\":[70,71,72,73],\\\"subTitle\\\":\\\"ump,ung,bl,cl\\\"},{\\\"ids\\\":[74,75,76,77],\\\"subTitle\\\":\\\"fl,gl,pl,sw\\\"},{\\\"ids\\\":[78,79,80,81],\\\"subTitle\\\":\\\"st,sp,sn,sm\\\"},{\\\"ids\\\":[82,83,84,85],\\\"subTitle\\\":\\\"sk,sc,sn,cr\\\"},{\\\"ids\\\":[86,87,88,89],\\\"subTitle\\\":\\\"dr,fr,gr,pr\\\"},{\\\"ids\\\":[90,91,92,93],\\\"subTitle\\\":\\\"tr,br,ae,ie\\\"}]\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/sys/data",
											"host": [
												"{{url}}"
											],
											"path": [
												"sys",
												"data"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "read",
							"item": [
								{
									"name": "addRead",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var token = pm.response.json().result.token;\r",
													"console.log(token);\r",
													"pm.environment.set(\"token\",token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"articleId\": \"94\",\r\n    \"position\":\"17%,55%|73%,24%\"\r\n}\r\n//三行 17%,55%|73%,24%\r\n//两行 17%,36%|55%,42%",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/read",
											"host": [
												"{{url}}"
											],
											"path": [
												"read"
											],
											"query": [
												{
													"key": "三行",
													"value": "17%,55%|73%,24%",
													"disabled": true
												},
												{
													"key": "两行",
													"value": "17%,36%|57%,34%",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delRead",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var token = pm.response.json().result.token;\r",
													"console.log(token);\r",
													"pm.environment.set(\"token\",token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"articleId\": \"69\",\r\n    \"position\":\"17%,55%|73%,24%\"\r\n}\r\n//三行 17%,55%|73%,24%\r\n//两行 17%,36%|55%,42%",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/read/55",
											"host": [
												"{{url}}"
											],
											"path": [
												"read",
												"55"
											],
											"query": [
												{
													"key": "三行",
													"value": "17%,55%|73%,24%",
													"disabled": true
												},
												{
													"key": "两行",
													"value": "17%,36%|57%,34%",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "editRead",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var token = pm.response.json().result.token;\r",
													"console.log(token);\r",
													"pm.environment.set(\"token\",token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":10,\r\n    \"position\": \"17%,55%|73%,24%\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/read",
											"host": [
												"{{url}}"
											],
											"path": [
												"read"
											]
										}
									},
									"response": []
								},
								{
									"name": "根据article修改",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var token = pm.response.json().result.token;\r",
													"console.log(token);\r",
													"pm.environment.set(\"token\",token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"articleId\":64,\r\n    \"position\": \"17%,55%|73%,24%\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/read/article",
											"host": [
												"{{url}}"
											],
											"path": [
												"read",
												"article"
											],
											"query": [
												{
													"key": "两行",
													"value": "17%,36%|57%,34%",
													"disabled": true
												},
												{
													"key": "三行",
													"value": "17%,55%|73%,24%",
													"disabled": true
												},
												{
													"key": "四行",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "pageSearchRead",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var token = pm.response.json().result.token;\r",
													"console.log(token);\r",
													"pm.environment.set(\"token\",token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"articleId\": \"2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/read?articleId=87",
											"host": [
												"{{url}}"
											],
											"path": [
												"read"
											],
											"query": [
												{
													"key": "articleId",
													"value": "87"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var token = pm.response.json().result.token;\r",
											"console.log(token);\r",
											"pm.environment.set(\"token\",token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"4272b25dZGFtdQ==788770898\",\r\n    \"password\": \"c4f706ec2htaWx5JTQwMTIz88770897\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sys/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"sys",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "NgAdmin",
			"item": [
				{
					"name": "customer",
					"item": [
						{
							"name": "获取当前用户的customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"var apikey=pm.environment.get(\"apikey\");\r",
											"\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers/me",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers",
										"me"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "查HDT下customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey\");\r",
											"\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers?products=hdt",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "products",
											"value": "hdt"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "查customer的child",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey-HDTTeamAccountcustomer2api\");\r",
											"\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers?products=hdt&parentId=6",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "products",
											"value": "hdt"
										},
										{
											"key": "parentId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "重置双因子认证",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"portalSettings\":{\r\n        \"enforce2fa\":false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers/3",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "查某个customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey-HDTTeamAccountcustomer2api\");\r",
											"\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers/110",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers",
										"110"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "查某个customer",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{NGAPI-URL}}/ngadmin/customers/21187",
											"host": [
												"{{NGAPI-URL}}"
											],
											"path": [
												"ngadmin",
												"customers",
												"21187"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Verify customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"var apikey=pm.environment.get(\"apikey\");\r",
											"\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/customers/me",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"customers",
										"me"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "portalUser",
					"item": [
						{
							"name": "[ngadmin]查一堆portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									},
									{
										"key": "report-range",
										"value": "self+children",
										"type": "text"
									},
									{
										"key": "on-behalf-of",
										"value": "1542",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/contacts?search=jul_test",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"contacts"
									],
									"query": [
										{
											"key": "offset",
											"value": "2",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"disabled": true
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "51408,51406",
											"disabled": true
										},
										{
											"key": "search",
											"value": "jul_test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[ngadmin]增portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{userName}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{newtime}}_张三\",\r\n    \"lastName\": \"{{newtime}}_lastName\",\r\n    \"emailAddress\": \"{{newtime}}@eamiLByRandom.testit\",\r\n    \"loginName\": \"{{newtime}}_loginName\",\r\n    \"password\": \"Pass87666$@#\",\r\n    \"phoneNumber\": {\r\n        \"countryCode\": \"en\",\r\n        \"number\": \"15365423656\"\r\n    },\r\n     \"address\": {\r\n        \"line1\":\"line1\",\r\n        \"line2\":\"line2\",\r\n        \"city\":\"魔幻城\",\r\n        \"state\":\"state\",\r\n        \"zipcode\":\"zipcode\",\r\n        \"country\":\"country\"\r\n    },\r\n    \"configs\": {\r\n        \"isMaster\": false,\r\n        \"products\": [\r\n            \"HDT\"\r\n        ],\r\n        \"canImpersonate\": \"all\",\r\n        \"status\": \"suspended\",\r\n        \"impersonateRegions\": [123],\r\n        \"impersonateExceptions\": [1,3]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/contacts",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"contacts"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "邀请contact",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{userName}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"product\": \"hdt\",\r\n    \"email\": \"chenlt@wangsu.com\",\r\n    \"adminFullName\":\"Jason WithLastName\",\r\n    \"roleIds\":[7586]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/contactsinvite",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"contactsinvite"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[ngadmin]改portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey-HDTTeamAccountcustomer2api\");\r",
											"// apikey=pm.environment.get(\"apikey\");\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"//xseYkkezv48hRjd7h4a5LzoyfgYeyX\r",
											"// pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\")\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Cache-Control",
										"value": "no-cache",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{newtime}}_firstName_update\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/contacts/51687",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"contacts",
										"51687"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "删除portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"{{newtime}}_firstName_update\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/contacts/55684",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"contacts",
										"55684"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "查单个portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/contacts/26474",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"contacts",
										"26474"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API调用历史",
					"item": [
						{
							"name": "分页查",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey-HDTTeamAccountcustomer2api\");\r",
											"apikey=pm.environment.get(\"apikey\");\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"//xseYkkezv48hRjd7h4a5LzoyfgYeyX\r",
											"pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\")\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/apicalls?limit=20",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"apicalls"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "根据ID查",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
											"var apikey=pm.environment.get(\"apikey-HDTTeamAccountcustomer2api\");\r",
											"apikey=pm.environment.get(\"apikey\");\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\");\r",
											"//xseYkkezv48hRjd7h4a5LzoyfgYeyX\r",
											"pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"dcR/zwb/riaamJkG_h4BHoCZ+95au2\")\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"\r",
											"//integration\r",
											"//user:nixqa\r",
											"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "testforhdt",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngadmin/apicalls/56d6b646877b5a80",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngadmin",
										"apicalls",
										"56d6b646877b5a80"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"description": "1542->21160",
											"disabled": true
										},
										{
											"key": "start",
											"value": "7",
											"description": "110->110",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "4",
											"disabled": true
										},
										{
											"key": "1542",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "role",
					"item": [
						{
							"name": "feature",
							"item": [
								{
									"name": "获取features列表",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{NGAPI-URL}}/ngrole/features?product=cdn",
											"host": [
												"{{NGAPI-URL}}"
											],
											"path": [
												"ngrole",
												"features"
											],
											"query": [
												{
													"key": "product",
													"value": "cdn"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增加features",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"name\": \"hdt\",\r\n\t\"url\": \"/hdt\", \r\n\t\"operations\": [\"create\", \"read\",\"update\",\"delete\"]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{NGAPI-URL}}/ngrole/hdt/features",
											"host": [
												"{{NGAPI-URL}}"
											],
											"path": [
												"ngrole",
												"hdt",
												"features"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "获取角色列表",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/hdt/roles",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"hdt",
										"roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "获取permission列表",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/permissions/mappings",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"permissions",
										"mappings"
									]
								}
							},
							"response": []
						},
						{
							"name": "获取单个角色",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/hdt/roles/7588",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"hdt",
										"roles",
										"7588"
									]
								}
							},
							"response": []
						},
						{
							"name": "获取contact的角色",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/contacts/10980/roles",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"contacts",
										"10980",
										"roles"
									],
									"query": [
										{
											"key": "product",
											"value": "hdt",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "获取contact的preference",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/cdn/contacts/52815/preference",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"cdn",
										"contacts",
										"52815",
										"preference"
									]
								}
							},
							"response": []
						},
						{
							"name": "增加角色",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"test-947\",\r\n    \"scope\": \"0\",\r\n    \"permissions\": [\r\n        {\r\n            \"featureId\": 0,\r\n            \"operations\": {\r\n                \"read\": \"allow\",\r\n                \"update\": \"allow\",\r\n                \"create\": \"allow\",\r\n                \"delete\": \"allow\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/hdt/roles/",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"hdt",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "删除角色",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"test-947\",\r\n    \"scope\": \"0\",\r\n    \"permissions\": [\r\n        {\r\n            \"featureId\": 0,\r\n            \"operations\": {\r\n                \"read\": \"allow\",\r\n                \"update\": \"allow\",\r\n                \"create\": \"allow\",\r\n                \"delete\": \"allow\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/hdt/roles/5971",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"hdt",
										"roles",
										"5971"
									]
								}
							},
							"response": []
						},
						{
							"name": "给contact授权角色",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roles\":[6887]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{NGAPI-URL}}/ngrole/contacts/10980/roles",
									"host": [
										"{{NGAPI-URL}}"
									],
									"path": [
										"ngrole",
										"contacts",
										"10980",
										"roles"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{pwd2}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{userName}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var CryptoJS = require('crypto-js');",
							"var timestamp=new Date();",
							"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());",
							"",
							"var apikey=pm.environment.get(\"key\");",
							"",
							"console.log(\"apikey\",apikey)",
							"",
							"console.log((new Date(timestamp)).toUTCString());",
							"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);",
							"",
							"console.info(CryptoJS.enc.Base64.stringify(pwd));",
							"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "HDT",
			"item": [
				{
					"name": "Hdt-web",
					"item": [
						{
							"name": "serviceQuotas",
							"item": [
								{
									"name": "UpdateQuotas",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"accountManagerEmail\": \"test@123.com\",\r\n    \"billUsingStripe\": true,\r\n    \"contractID\": \"contractId\",\r\n    \"contractStartDate\": \"2022-07-06T16:00:00Z\",\r\n    \"creationTime\": \"2022-07-06T03:18:48Z\",\r\n    \"customerID\": 25,\r\n    \"description\": \"update\",\r\n    \"lastUpdateTime\": \"2022-07-06T03:18:49Z\",\r\n    \"resourceQuotas\": {\r\n        \"allowDedicatedIPService\": 0,\r\n        \"allowRawLogDownload\": 0,\r\n        \"allowVirtualPrivateLine\": 0,\r\n        \"trafficVolumeLimit\": \"3000\",\r\n        \"transportsLimit\": \"30\"\r\n    },\r\n    \"serviceQuotaID\": 1091,\r\n    \"status\": \"suspended\",\r\n    \"trialDeadline\": \"2022-07-08T05:18:48\",\r\n    \"upgradeDate\": \"2022-07-06T03:18:48Z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/stat/json/restApi?apiId=updateServiceQuota&serviceQuotaID=1091",
											"host": [
												"{{url}}"
											],
											"path": [
												"",
												"stat",
												"json",
												"restApi"
											],
											"query": [
												{
													"key": "apiId",
													"value": "updateServiceQuota"
												},
												{
													"key": "serviceQuotaID",
													"value": "1091"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getQuotas",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi?apiId=getQuotaByCus&customerId=1091",
											"host": [
												"{{url}}"
											],
											"path": [
												"",
												"stat",
												"restApi"
											],
											"query": [
												{
													"key": "apiId",
													"value": "getQuotaByCus"
												},
												{
													"key": "customerId",
													"value": "1091"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "customer",
							"item": [
								{
									"name": "SyncAllCustomer",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi.action?apiId=syncAllCustomers",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "syncAllCustomers"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteCustomer",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi.action?apiId=deleteCustomer&customerId=3364",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "deleteCustomer"
												},
												{
													"key": "customerId",
													"value": "3364"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SyncCustomer",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi.action?apiId=SyncCustomer&customerId=3193",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "SyncCustomer"
												},
												{
													"key": "customerId",
													"value": "3193"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "UpdateCustomer",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"billingCycle\": 360,\r\n\t\"cId\": 30954,\r\n\t\"comment\": \"\",\r\n\t\"contractItems\": [\r\n\t\t{\r\n\t\t\t\"itemNo\": \"123\"\r\n\t\t}\r\n\t],\r\n\t\"contractNo\": \"1\",\r\n\t\"customerId\": 31,\r\n\t\"customerName\": \"wangsu\",\r\n\t\"customerStatus\": \"active\",\r\n\t\"customerType\": 0,\r\n\t\"dateAdded\": 1406088629000,\r\n\t\"dateUpdated\": 1670221591000,\r\n\t\"emailAddress\": \"chenlt@wangsu.com\",\r\n\t\"loginName\": \"wangsu-api-Z8EIXwXU\",\r\n\t\"maxDomains\": 2147483647,\r\n\t\"parentId\": 6,\r\n\t\"responsiblePerson\": \"chen linting\",\r\n\t\"salesPeopleId\": 0,\r\n\t\"sdkCustomer\": true,\r\n\t\"status\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/stat/json/restApi.action?apiId=updateCustomer",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"json",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "updateCustomer"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getCustomers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi.action?apiId=customerInfoSearch&code=ChenMa&has_c_id=false",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "customerInfoSearch"
												},
												{
													"key": "code",
													"value": "ChenMa"
												},
												{
													"key": "has_c_id",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getAuthCustomer",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/stat/restApi.action?apiId=getAuthCustomer",
											"host": [
												"{{url}}"
											],
											"path": [
												"stat",
												"restApi.action"
											],
											"query": [
												{
													"key": "apiId",
													"value": "getAuthCustomer"
												},
												{
													"key": "code",
													"value": "ChenMa",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "login",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "c3VwZXI=",
											"type": "text"
										},
										{
											"key": "password",
											"value": "MTIzNDU2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/admin/doLogin",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"doLogin"
									]
								}
							},
							"response": []
						},
						{
							"name": "getParam",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/stat/restApi.action?apiId=getParamsById&id=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"stat",
										"restApi.action"
									],
									"query": [
										{
											"key": "apiId",
											"value": "getParamsById"
										},
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getParamByCode",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/stat/restApi.action?apiId=getSysparamsByCode&paramCode=CLOUD_DNS_DOMAIN",
									"host": [
										"{{url}}"
									],
									"path": [
										"stat",
										"restApi.action"
									],
									"query": [
										{
											"key": "apiId",
											"value": "getSysparamsByCode"
										},
										{
											"key": "paramCode",
											"value": "CLOUD_DNS_DOMAIN"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getSuffixs",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/stat/restApi.action?apiId=getSuffixs",
									"host": [
										"{{url}}"
									],
									"path": [
										"stat",
										"restApi.action"
									],
									"query": [
										{
											"key": "apiId",
											"value": "getSuffixs"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getStrategys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/stat/restApi.action?apiId=getTransportStrategy",
									"host": [
										"{{url}}"
									],
									"path": [
										"stat",
										"restApi.action"
									],
									"query": [
										{
											"key": "code",
											"value": "ChenMa",
											"disabled": true
										},
										{
											"key": "apiId",
											"value": "getTransportStrategy"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getAccelRegions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/stat/restApi.action?apiId=getAccelRegions",
									"host": [
										"{{url}}"
									],
									"path": [
										"stat",
										"restApi.action"
									],
									"query": [
										{
											"key": "code",
											"value": "ChenMa",
											"disabled": true
										},
										{
											"key": "apiId",
											"value": "getAccelRegions"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "hdt-api",
					"item": [
						{
							"name": "transport",
							"item": [
								{
									"name": "[内部]查一堆transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/page/transport?userCode=super&transportStrategy=topspeed,topquick",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"page",
												"transport"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "userCode",
													"value": "super"
												},
												{
													"key": "targetDomain",
													"value": "testdomain-t1648566328438.mwtrial.info",
													"disabled": true
												},
												{
													"key": "transportIds",
													"value": "1,2,3",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												},
												{
													"key": "transportStrategy",
													"value": "topspeed,topquick"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "[内部]查某个transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport/501861?userCode=super",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport",
												"501861"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "userCode",
													"value": "super"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "[内部]增transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"var newTime =   (month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min)  +\r",
													"\t\t\t\t(sec < 10? '0' + sec : sec) ;\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customerId\":1542,\r\n    \"comments\": \"{{newtime}}\",\r\n    \"transportStatus\": \"1\",\r\n    // \"ipVersion\": \"1\",\r\n    \"targetPort\": 112,\r\n    // \"portRange\": \"80|0;\",\r\n    // \"targetDomain\": \"1`345624578-jhgytr6rdewsdvb.njhytgfvcdersw65789756guhvbcft5.jkhuyt7ygf4321qwazxcvbnmkloi9898uhgh61234567891024578-jhgytr6rd.njhytgfvcdersw65789756guhvbcft5.jkhuyt7ygf4321qwazxcvbnmkloi9898uhgh.1234567891024578pjhpoijgytr6rdesdlh968rhc47r.mwtrial.info\",\r\n    \"targetDomain\": \"www.td{{newtime}}-{{envName}}-postman-inner.com\",\r\n    \"accessDomain\": \"www.ad{{newtime}}-{{envName}}-postman-inner.com\",\r\n    // \"accessDomain\": \"90op\",\r\n    \"accessPort\": 443,\r\n    \"dedicatedIpService\": \"0\",\r\n    \"transportStrategy\": \"topspeed\",\r\n    \"carryClientIp\": \"1\",\r\n    \"speedLimit\": \"9\",\r\n    // \"speedLimit\": 1.87,\r\n    \"concurrentLimit\": \"34\",\r\n    \"cName\": \"cName-{{newtime}}-{{envName}}-postman-inner.shland.com\",\r\n    // \"cNameViews\": \"11036,11037,11038,11039,11040,11041,11042,11043,11044,11045\",\r\n    // \"shieldView\": \"11036\",\r\n    // \"accelRegions\": \"Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita, SouthAfrica_OtherCountry\",\r\n    \"ipWhiteList\": \"11.11.11.11\",\r\n    \"ipBlackList\": \"12.43.22.98\",\r\n    \"hasICP\": \"0\",\r\n    \"hasPSB\": \"0\",\r\n    \"transportType\": \"ipport\",\r\n    \"applicationProtocol\": \"sni\",\r\n    \"useFtp\": \"0\"\r\n    // \"useUdp\": \"0\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport"
											],
											"query": [
												{
													"key": "userCode",
													"value": "super",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "[内部]改transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnpYQ0ZaUUZqN0s0cGk2UG9tKzVIR3BnQ0ZEcz0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n        \"accessDomain\": \"www.ad20220324-110846-integration.com\",\r\n        \"accessPort\": 443,\r\n        \"applicationProtocol\": \"sni\",\r\n        \"cName\": \"cname-20220324-110846-integration.shland.com\",\r\n        \"cNameViews\": \"11\",\r\n        \"carryClientIp\": 0,\r\n        \"comments\": \"test dedicatedIpService\",\r\n        \"concurrentLimit\": 34,\r\n        \"dedicatedIpService\": 1,\r\n        \"hasICP\": 0,\r\n        \"hasPSB\": 0,\r\n        \"ipBlackList\": \"12.43.22.98\",\r\n        \"ipVersion\": 1,\r\n        \"ipWhiteList\": \"11.11.11.11\",\r\n        \"shieldHost\": \"shield-cname-20220324-110846-integration.shland.com.hdtgtm.com\",\r\n        \"shieldView\": \"12\",\r\n        \"speedLimit\": 9,\r\n        \"targetDomain\": \"www.td20220324-110846-integration.com\",\r\n        \"targetPort\": 112,\r\n        \"transportCode\": \"www.td20220324-110846-integration.com:112\",\r\n        \"transportId\": 1015760,\r\n        \"transportName\": \"www.td20220324-110846-integration.com:112\",\r\n        \"transportStatus\": 1,\r\n        \"transportStrategy\": \"topspeed\",\r\n        \"useFtp\": 0,\r\n        \"useUdp\": 0\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport/1015760",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport",
												"1015760"
											]
										}
									},
									"response": []
								},
								{
									"name": "改transport Configuration(未)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnpYQ0ZaUUZqN0s0cGk2UG9tKzVIR3BnQ0ZEcz0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"accessDomain\": \"*.test1738.com:80\",\r\n    \"accessPort\": 80,\r\n    \"applicationProtocol\": \"http\",\r\n    \"cName\": \"www.test1738.com.506366.shland.com\",\r\n    \"carryClientIp\": 0,\r\n    \"comments\": \"我就试一下修改 快来打我啊\\n.2你别动 我顺着网线来打你了3.哈哈哈哈哈\",\r\n    \"concurrentLimit\": 0,\r\n    \"customerId\": 1542,\r\n    \"dedicatedIpService\": 0,\r\n    \"hasICP\": 0,\r\n    \"hasPSB\": 0,\r\n    \"ipVersion\": 3,\r\n    \"speedLimit\": 2,\r\n    \"targetDomain\": \"www.test.com\",\r\n    \"targetPort\": 1738,\r\n    \"transportCode\": \"www.test.com:1738\",\r\n    \"transportId\": 506366,\r\n    \"transportName\": \"www.test.com:1738\",\r\n    \"transportStatus\": 1,\r\n    \"transportStrategy\": \"topspeed\",\r\n    \"useFtp\": 0,\r\n    \"useUdp\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/private/transport/509617",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"private",
												"transport",
												"509617"
											]
										}
									},
									"response": []
								},
								{
									"name": "[INNER]查trans_history",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOkhhRzQwVW5HS2pIb2FQUE8ycHBGeG1SaVJUUT0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport/516858/history?limit=10&start=0&userCode=super",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport",
												"516858",
												"history"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "start",
													"value": "0"
												},
												{
													"key": "userCode",
													"value": "super"
												},
												{
													"key": "targetDomain",
													"value": "testdomain-t1648566328438.mwtrial.info",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "删transport(将status字段置为0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnhGVWdFMlJXWktrcFBVMEdleUQzV0RLR1hYQT0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport/510095",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport",
												"510095"
											]
										}
									},
									"response": []
								},
								{
									"name": "批量删transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnhGVWdFMlJXWktrcFBVMEdleUQzV0RLR1hYQT0=",
												"type": "text"
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "transportIds",
													"value": "505648,505664,505676,505677",
													"type": "text"
												},
												{
													"key": "userCode",
													"value": "super",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/transport/batch",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"transport",
												"batch"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "sys_param",
							"item": [
								{
									"name": "查一堆sys_param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams?paramCode=POLICY_MONITOR&paramNam=POLICY_MONITO&paramValue=/testsdn",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams"
											],
											"query": [
												{
													"key": "start",
													"value": "3",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "2",
													"disabled": true
												},
												{
													"key": "paramCode",
													"value": "POLICY_MONITOR"
												},
												{
													"key": "paramNam",
													"value": "POLICY_MONITO"
												},
												{
													"key": "paramValue",
													"value": "/testsdn"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查某个sys_param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams/107",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams",
												"107"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增sys_param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"paramCode\": \"paramCode-{{newtime}}\",\r\n    \"paramNam\": \"paramNam-{{newtime}}\",\r\n    \"paramValue\": \"paramCode-{{newtime}}\",\r\n    \"paramExtValue1\": \"paramExtValue1-{{newtime}}\",\r\n    \"paramExtValue2\": \"paramExtValue2-{{newtime}}\",\r\n    \"paramRemark\": \"paramRemark-{{newtime}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams"
											],
											"query": [
												{
													"key": "start",
													"value": "3",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "2",
													"disabled": true
												},
												{
													"key": "paramCode",
													"value": "PORTAL_ADMIN_APIKEY",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "改sys_param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"paramCode\": \"paramCode-656565ik\",\r\n  \"paramNam\": \"{{newtime}}-paramNam\",\r\n  \"paramValue\": \"{{newtime}}-paramValue\",\r\n//   \"paramExtValue1\": \"{{newtime}}-paramExtValue1\",\r\n  \"paramExtValue2\": \"{{newtime}}-paramExtValue1\",\r\n//   \"paramStatus\": 0,\r\n  \"paramRemark\": \"{{newtime}}-paramRemark\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams/107",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams",
												"107"
											],
											"query": [
												{
													"key": "start",
													"value": "3",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "2",
													"disabled": true
												},
												{
													"key": "paramCode",
													"value": "PORTAL_ADMIN_APIKEY",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "删sys_param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams/107",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams",
												"107"
											],
											"query": [
												{
													"key": "start",
													"value": "3",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "2",
													"disabled": true
												},
												{
													"key": "paramCode",
													"value": "PORTAL_ADMIN_APIKEY",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "view",
							"item": [
								{
									"name": "更新view",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "super",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sync/viewOrigin",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sync",
												"viewOrigin"
											]
										}
									},
									"response": []
								},
								{
									"name": "查view",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "super",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/viewOrigin",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"viewOrigin"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "flow",
							"item": [
								{
									"name": "/inner/report/flow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "datefrom",
												"value": "2021-10-12T16:00:00",
												"type": "text"
											},
											{
												"key": "dateto",
												"value": "2021-12-12T16:00:00",
												"type": "text"
											},
											{
												"key": "timezone",
												"value": "0",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "datefrom",
													"value": "2022-02-01T00:00:00",
													"type": "text"
												},
												{
													"key": "dateto",
													"value": "2022-02-28T23:59:59",
													"type": "text"
												},
												{
													"key": "timezone",
													"value": "0",
													"type": "text"
												},
												{
													"key": "customerIds",
													"value": "1542",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/report/flow",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"report",
												"flow"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/inner/flow/1542",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "datefrom",
												"value": "2021-10-12T16:00:00",
												"type": "text"
											},
											{
												"key": "dateto",
												"value": "2021-12-12T16:00:00",
												"type": "text"
											},
											{
												"key": "timezone",
												"value": "0",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "datefrom",
													"value": "2021-12-10T16:00:00",
													"type": "text",
													"disabled": true
												},
												{
													"key": "dateto",
													"value": "2021-12-12T16:00:00",
													"type": "text",
													"disabled": true
												},
												{
													"key": "timezone",
													"value": "0",
													"type": "text",
													"disabled": true
												},
												{
													"key": "customerIds",
													"value": "1542,110",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/flow/1542?datefrom=2021-12-10T16:00:00&dateto=2021-12-12T16:00:00&timezone=0&customerIds=1542,110&apiId=123&menuId=456",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"flow",
												"1542"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "datefrom",
													"value": "2021-12-10T16:00:00"
												},
												{
													"key": "dateto",
													"value": "2021-12-12T16:00:00"
												},
												{
													"key": "timezone",
													"value": "0"
												},
												{
													"key": "customerIds",
													"value": "1542,110"
												},
												{
													"key": "apiId",
													"value": "123"
												},
												{
													"key": "menuId",
													"value": "456"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/inner/report/flow/1542",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "datefrom",
												"value": "2021-10-12T16:00:00",
												"type": "text"
											},
											{
												"key": "dateto",
												"value": "2021-12-12T16:00:00",
												"type": "text"
											},
											{
												"key": "timezone",
												"value": "0",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "datefrom",
													"value": "2022-02-01T00:00:00",
													"type": "text"
												},
												{
													"key": "dateto",
													"value": "2022-02-2T23:59:59",
													"type": "text"
												},
												{
													"key": "timezone",
													"value": "0",
													"type": "text"
												},
												{
													"key": "customerIds",
													"value": "1542",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/report/flow/1542",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"report",
												"flow",
												"1542"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/inner/report/flow/summary/1542",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "datefrom",
													"value": "2022-02-04T16:43:27",
													"type": "text"
												},
												{
													"key": "dateto",
													"value": "2022-03-04T16:43:27",
													"type": "text"
												},
												{
													"key": "timezoneOffset",
													"value": "8",
													"type": "text"
												},
												{
													"key": "",
													"value": "1542",
													"type": "text",
													"disabled": true
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/report/flow/summary/1542",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"report",
												"flow",
												"summary",
												"1542"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "datefrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "dateto",
													"value": "",
													"disabled": true
												},
												{
													"key": "timezone",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "api _info",
							"item": [
								{
									"name": "查api列表",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/system/api",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"system",
												"api"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"msgType\": \"msgType\",\r\n  \"content\": \"content\",\r\n  \"users\": [\r\n    \"G2103016\"\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/wechat/message-to-person",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"wechat",
												"message-to-person"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增api info",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"realId\": \"unit\",\r\n  \"name\": \"unit-test_name_{{newtime}}\",\r\n  \"type\": 1,\r\n  \"permission\": \"unit-test_permission_{{newtime}}\",\r\n  \"url\": \"unit-test_url_{{newtime}}\",\r\n  \"iscache\": 0,\r\n  \"precall\": \"unit-test_precall_{{newtime}}\",\r\n  \"callback\": \"unit-test_callback_{{newtime}}\",\r\n  \"method\": \"GET\",\r\n  \"dataclass\": \"unit-test_dataclass_{{newtime}}\",\r\n  \"remarks\": \"unit-test_remarks_{{newtime}}\",\r\n  \"apiStatus\": 1,\r\n  \"userCode\": \"unit-test\"\r\n \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/system/api",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"system",
												"api"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "分页查api列表",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/filter/page/api?limit=1",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"filter",
												"page",
												"api"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "改api info",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"realId\": \"unit\",\r\n  \"name\": \"unit-test_name_{{newtime}}\",\r\n  \"type\": 1,\r\n  \"permission\": \"unit-test_permission_{{newtime}}\",\r\n  \"url\": \"unit-test_url_{{newtime}}\",\r\n  \"iscache\": 0,\r\n  \"precall\": \"unit-test_precall_{{newtime}}\",\r\n  \"callback\": \"unit-test_callback_{{newtime}}\",\r\n  \"method\": \"GET\",\r\n  \"dataclass\": \"unit-test_dataclass_{{newtime}}\",\r\n  \"remarks\": \"unit-test_remarks_{{newtime}}\",\r\n  \"apiStatus\": 1,\r\n  \"userCode\": \"unit-test\"\r\n \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/system/api/unit",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"system",
												"api",
												"unit"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "删api info",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"realId\": \"unit\",\r\n  \"name\": \"unit-test_name_{{newtime}}\",\r\n  \"type\": 1,\r\n  \"permission\": \"unit-test_permission_{{newtime}}\",\r\n  \"url\": \"unit-test_url_{{newtime}}\",\r\n  \"iscache\": 0,\r\n  \"precall\": \"unit-test_precall_{{newtime}}\",\r\n  \"callback\": \"unit-test_callback_{{newtime}}\",\r\n  \"method\": \"GET\",\r\n  \"dataclass\": \"unit-test_dataclass_{{newtime}}\",\r\n  \"remarks\": \"unit-test_remarks_{{newtime}}\",\r\n  \"apiStatus\": 1,\r\n  \"userCode\": \"unit-test\"\r\n \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/system/api/unit",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"system",
												"api",
												"unit"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "sysCode",
							"item": [
								{
									"name": "refresh",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/admin/syscode/refresh",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"admin",
												"syscode",
												"refresh"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "user",
							"item": [
								{
									"name": "查user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/user",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"user"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查user type",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/user-types",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"user-types"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查user下的customers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/user/base-data?userCode=chenj220520",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"user",
												"base-data"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "userCode",
													"value": "chenj220520"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查具体user By userCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/user/serviceQuotas",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"user",
												"serviceQuotas"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": \"code-{{newtime}}\",\r\n  \"userApiKey\": \"8c6c96088e9918a6ecaa03b7c0522d2c\",\r\n  \"userType\": 2,\r\n  \"userStatus\": 1,\r\n  \"userRemark\": \"userRemark-{{newtime}}\",\r\n  \"userRoleStr\": \"15\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/user",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"user"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "role",
							"item": [
								{
									"name": "查role",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/role/page?roleCode=123",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"role",
												"page"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "roleCode",
													"value": "123"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增role",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) \r",
													"\t\t\t\t;\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"roleName\": \"{{newtime}}_roleName\",\r\n    \"roleCode\": \"{{newtime}}_roleCode\",\r\n    \"userCode\": \"postman\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/role",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"role"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "删role",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"realId\": \"unit\",\r\n  \"name\": \"unit-test_name_{{newtime}}\",\r\n  \"type\": 1,\r\n  \"permission\": \"unit-test_permission_{{newtime}}\",\r\n  \"url\": \"unit-test_url_{{newtime}}\",\r\n  \"iscache\": 0,\r\n  \"precall\": \"unit-test_precall_{{newtime}}\",\r\n  \"callback\": \"unit-test_callback_{{newtime}}\",\r\n  \"method\": \"GET\",\r\n  \"dataclass\": \"unit-test_dataclass_{{newtime}}\",\r\n  \"remarks\": \"unit-test_remarks_{{newtime}}\",\r\n  \"apiStatus\": 1,\r\n  \"userCode\": \"unit-test\"\r\n \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/role/24",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"role",
												"24"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增role Api",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) \r",
													"\t\t\t\t;\r",
													"\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											},
											{
												"key": "userCode",
												"value": "super",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \r\n  \"roleId\": \"15\",\r\n  \"apiName\": \"transportHistoryList\",\r\n  \"userCode\": \"postman\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{inner-url}}/hdt/inner/roleApiRel",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"roleApiRel"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查role Api",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/role/apiList?roleId=15",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"role",
												"apiList"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "roleCode",
													"value": "123",
													"disabled": true
												},
												{
													"key": "roleId",
													"value": "15"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "customer",
							"item": [
								{
									"name": "查单个customer",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp = new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"\r",
													"var apikey = pm.environment.get(\"apikey\");\r",
													"var pwd = CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/customer/110",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"customer",
												"110"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "serviceQuota",
							"item": [
								{
									"name": "查询quota",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp = new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"\r",
													"var apikey = pm.environment.get(\"apikey\");\r",
													"var pwd = CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/serviceQuotas/customer/25",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"serviceQuotas",
												"customer",
												"25"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "server",
							"item": [
								{
									"name": "getViewOrigin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/viewOrigin",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"viewOrigin"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "testdomain-t1648566328438.mwtrial.info",
													"disabled": true
												},
												{
													"key": "transportIds",
													"value": "1,2,3",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getAccelRegions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/accelRegions",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"accelRegions"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "testdomain-t1648566328438.mwtrial.info",
													"disabled": true
												},
												{
													"key": "transportIds",
													"value": "1,2,3",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "parameter",
							"item": [
								{
									"name": "getByCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "super",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{inner-url}}/hdt/inner/sysparams/detail?paramCode=SYSTEM_PORTS",
											"host": [
												"{{inner-url}}"
											],
											"path": [
												"hdt",
												"inner",
												"sysparams",
												"detail"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "testdomain-t1648566328438.mwtrial.info",
													"disabled": true
												},
												{
													"key": "transportIds",
													"value": "1,2,3",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												},
												{
													"key": "paramCode",
													"value": "SYSTEM_PORTS"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getSuffixs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "super",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}/hdt/inner/transport/suffixs",
									"host": [
										"{{url}}"
									],
									"path": [
										"hdt",
										"inner",
										"transport",
										"suffixs"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "targetDomain",
											"value": "testdomain-t1648566328438.mwtrial.info",
											"disabled": true
										},
										{
											"key": "transportIds",
											"value": "1,2,3",
											"disabled": true
										},
										{
											"key": "transport",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//当发现",
									"//  \"message\": \"This user is not allowed to perform this request.\",",
									"//要在hdt_web_api中的sys_params param_nam为VALID_IPS，将本机ip添加至param_value"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "IPB",
					"item": [
						{
							"name": "上传ipb升级文件",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"var apikey=\"VxGwG5Q6Al\";//integration\r",
											"\r",
											"//ipbUpgrade\r",
											"// var apikey=\"HUM59Cs613\";//QA\r",
											"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
											"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
											"// var str=HEX.hexToString(apikey);\r",
											"// console.log(str)\r",
											"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
											"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
											"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
											"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"// // console.info(pwd);\r",
											"// console.log(pwd);\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"\r",
											"//Long customerId=1542L;\r",
											"//String userCode=\"hdtteamaccount-api\";\r",
											"//TransportOperService 560-565 注释\r",
											"//  if (StringUtils.isNotBlank(transport.getUseStandardPort())) {\r",
											"        // \t  cNameRecordId = createCnameForPortReuseTransport(transport, transList, userCode, ctEvent);\r",
											"        //   } else {\r",
											"        // \t  accessIp = createMapForOthersTransport(transport, transList, tcpPorts, udpPorts, accessViewDefaultId, userCode, ctEvent);\r",
											"        // \t  cNameRecordId = transport.getCNameRecordId();\r",
											"        // }\r",
											"// 607、609注释\r",
											"//      hdtManageService.createTransport(trans);\r",
											"//        hdtManageService.hdtConfModifyConf(trans);\r",
											"\r",
											"// ViewControl注释\r",
											"// gtmCommonService.saveViews(viewIds);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "ipbUpgrade",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/F:/WeiXinFiles/WXWork/1688851134950387/Cache/File/2021-08/ipb-view.ngbEdge.xml/ipb-view.ngbEdgeooo.xml"
										},
										{
											"key": "md5",
											"type": "file",
											"src": "/F:/WeiXinFiles/WXWork/1688851134950387/Cache/File/2021-08/ipb-view.ngbEdge.xml/ipb-view.ngbEdge.xmlhahattttttt.md5"
										}
									]
								},
								"url": {
									"raw": "{{url}}/hdt/ipdb/upgrade",
									"host": [
										"{{url}}"
									],
									"path": [
										"hdt",
										"ipdb",
										"upgrade"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "hdt-ng-portal",
					"item": [
						{
							"name": "transport",
							"item": [
								{
									"name": "查一堆transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "digest",
											"digest": [
												{
													"key": "password",
													"value": "hdtteamPWD2!",
													"type": "string"
												},
												{
													"key": "username",
													"value": "hdtteamaccount-yanzhu",
													"type": "string"
												},
												{
													"key": "algorithm",
													"value": "MD5",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{Console-URL}}/hdt/v1/transport",
											"host": [
												"{{Console-URL}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查某个transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/transport/513653",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport",
												"513653"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "获取strategy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/transport-strategies",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport-strategies"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"\r",
													"pm.environment.set(\"Day\", timestamp.getDate());\r",
													"pm.environment.set(\"Month\", timestamp.getMonth()+1);\r",
													"pm.environment.set(\"hour\",timestamp.getHours());\r",
													"pm.environment.set(\"min\",timestamp.getMinutes());\r",
													"pm.environment.set(\"sec\",timestamp.getSeconds());\r",
													"// pm.environment.set(\"Day\", timestamp.getDate());\r",
													"\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"//Long customerId=1542L;\r",
													"//String userCode=\"hdtteamaccount-api\";\r",
													"//TransportOperService 560-565 注释\r",
													"//  if (StringUtils.isNotBlank(transport.getUseStandardPort())) {\r",
													"        // \t  cNameRecordId = createCnameForPortReuseTransport(transport, transList, userCode, ctEvent);\r",
													"        //   } else {\r",
													"        // \t  accessIp = createMapForOthersTransport(transport, transList, tcpPorts, udpPorts, accessViewDefaultId, userCode, ctEvent);\r",
													"        // \t  cNameRecordId = transport.getCNameRecordId();\r",
													"        // }\r",
													"// 607、609注释\r",
													"//      hdtManageService.createTransport(trans);\r",
													"//        hdtManageService.hdtConfModifyConf(trans);\r",
													"\r",
													"// <transport>\r",
													"//     <comments>test applicationProtocol</comments>\r",
													"//     <transportStatus>1</transportStatus>\r",
													"//     <ipVersion>1</ipVersion>\r",
													"//     <portRange>80|0;</portRange>\r",
													"//     <targetDomain>www.td1008-1.com</targetDomain>\r",
													"//     <accessDomain>www.ad1008-1.com</accessDomain>\r",
													"//     <accessPort>80</accessPort>\r",
													"//     <dedicatedIpService>0</dedicatedIpService>\r",
													"//     <transportStrategy>topquick</transportStrategy>\r",
													"//     <carryClientIp>1</carryClientIp>\r",
													"//     <speedLimit>12</speedLimit>\r",
													"//     <concurrentLimit>1</concurrentLimit>\r",
													"//     <cName>1008-1.shland.com</cName>\r",
													"//     <cNameViews>11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045</cNameViews>\r",
													"//     <accelRegions>Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita, SouthAfrica_OtherCountry</accelRegions>\r",
													"//     <ipWhiteList>12.32.23.33</ipWhiteList>\r",
													"//     <ipBlackList>13.43.33.23</ipBlackList>\r",
													"//     <hasICP>0</hasICP>\r",
													"//     <hasPSB>0</hasPSB>\r",
													"//     <applicationProtocol>http</applicationProtocol>\r",
													"//     <useFtp>0</useFtp>\r",
													"// </transport>\r",
													"\r",
													"\r",
													"\r",
													"// {\r",
													"  \r",
													"//     \"comments\": \"test applicationProtocol\",\r",
													"//     \"transportStatus\": \"1\",\r",
													"//     \"ipVersion\": \"1\",\r",
													"//     \"portRange\": \"80|0;\",\r",
													"//     \"targetDomain\": \"www.td1008-2.com\",\r",
													"//     \"accessDomain\": \"www.ad1008-2.com\",\r",
													"//     \"accessPort\": \"80\",\r",
													"//     \"dedicatedIpService\": \"0\",\r",
													"//     \"transportStrategy\": \"topquick\",\r",
													"//     \"carryClientIp\": \"1\",\r",
													"//     \"speedLimit\": \"12\",\r",
													"//     \"concurrentLimit\": \"1\",\r",
													"//     \"cName\": \"1008-2.shland.com\",\r",
													"//     \"cNameViews\": \"11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045\",\r",
													"//     \"accelRegions\": \"Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita, SouthAfrica_OtherCountry\",\r",
													"//     \"ipWhiteList\": \"12.32.23.33\",\r",
													"//     \"ipBlackList\": \"13.43.33.23\",\r",
													"//     \"hasICP\": \"0\",\r",
													"//     \"hasPSB\": \"0\",\r",
													"//     \"applicationProtocol\": \"http\",\r",
													"//     \"useFtp\": \"0\"\r",
													"  \r",
													"// }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/xml",
												"type": "text",
												"disabled": true
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "customerId",
												"value": "{{customerId}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"comments\": \"test validate\",\r\n    \"transportStatus\": 1,\r\n    // \"ipVersion\": \"8\",\r\n    \"targetPort\": 112,\r\n    // \"portRange\": \"80|0;\",\r\n    // \"targetDomain\": \"1`345624578-jhgytr6rdewsdvb.njhytgfvcdersw65789756guhvbcft5.jkhuyt7ygf4321qwazxcvbnmkloi9898uhgh61234567891024578-jhgytr6rd.njhytgfvcdersw65789756guhvbcft5.jkhuyt7ygf4321qwazxcvbnmkloi9898uhgh.1234567891024578pjhpoijgytr6rdesdlh968rhc47r.mwtrial.info\",\r\n    \"targetDomain\": \"www.td{{Month}}{{Day}}-{{hour}}{{min}}{{sec}}-{{envName}}.com\",\r\n    \"accessDomain\": \"www.ad{{Month}}{{Day}}-{{hour}}{{min}}{{sec}}-{{envName}}.com\",\r\n    // \"accessDomain\": \"90op\",\r\n    \"accessPort\": 443,\r\n    \"dedicatedIpService\": \"0\",\r\n    \"transportStrategy\": \"topspeed\",\r\n    \"carryClientIp\": \"1\",\r\n    \"speedLimit\": \"9\",\r\n    // \"speedLimit\": 1.87,\r\n    \"concurrentLimit\": \"34\",\r\n    \"cName\": \"{{Month}}{{Day}}-{{hour}}{{min}}{{sec}}-{{envName}}.shland.com\",\r\n    \"cNameViews\": \"11\",\r\n    \"shieldView\": \"12\",\r\n    // \"accelRegions\": \"Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita\",\r\n    \"ipWhiteList\": \"11.11.11.11\",\r\n    \"ipBlackList\": \"12.43.22.98\",\r\n    \"hasICP\": \"0\",\r\n    \"hasPSB\": \"0\",\r\n    \"transportType\": \"ipport\",\r\n    \"applicationProtocol\": \"sni\"\r\n    // \"useFtp\": \"3\",\r\n    // \"useUdp\": \"5\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Console-URL}}/hdt/v1/transport",
											"host": [
												"{{Console-URL}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport"
											]
										}
									},
									"response": []
								},
								{
									"name": "改transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"pm.environment.set(\"Day\", timestamp.getDate());\r",
													"pm.environment.set(\"Month\", timestamp.getMonth()+1);\r",
													"pm.environment.set(\"hour\",timestamp.getHours());\r",
													"pm.environment.set(\"min\",timestamp.getMinutes());\r",
													"pm.environment.set(\"sec\",timestamp.getSeconds());\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"// \"comments\": \"{{Month}}{{Day}}-{{hour}}{{min}}{{sec}}-{{envName}}\",\r",
													"// transportOper 1338-1339\r",
													"// 注释      // 下发配置\r",
													"//      hdtManageService.modifyTransport(newTransport);\r",
													"//      hdtManageService.hdtConfModifyConf(newTransport);\r",
													"// TransporrtOperService 1252-1284 注释\r",
													"\r",
													"//1180      upgradeIpVersion(newTransport, oldTransport, newDispDomain);\r",
													"//1163      DispatchDomain newDispDomain = modifyCname(mtEvent, newTransport, oldTransport, newCnameRecordId, userCode);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnpYQ0ZaUUZqN0s0cGk2UG9tKzVIR3BnQ0ZEcz0=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\r\n                \"accessDomain\": \"0401-1.access.com\",\r\n                \"accessPort\": 80,\r\n                \"applicationProtocol\": \"http\",\r\n                \"cName\": \"0401-1.access.com.507295.shland.com\",\r\n                \"carryClientIp\": 0,\r\n                \"comments\": \"edjfhewehufgfi\",\r\n                \"concurrentLimit\": 0,\r\n                \"dedicatedIpService\": 0,\r\n                \"hasICP\": 0,\r\n                \"hasPSB\": 0,\r\n                \"ipBlackList\": \"\",\r\n                \"ipVersion\": 1,\r\n                \"ipWhiteList\": \"\",\r\n                \"speedLimit\": 0,\r\n                \"targetDomain\": \"test.verifyICP3.com\",\r\n                \"targetPort\": 80,\r\n                \"transportCode\": \"test.verifyICP3.com:80\",\r\n                \"transportId\": 507295,\r\n                \"transportName\": \"test.verifyICP3.com:80\",\r\n                \"transportStatus\": 0,\r\n                \"transportStrategy\": \"topspeed\",\r\n                \"useFtp\": 1,\r\n                \"useUdp\": 0\r\n            }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/transport/507295",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport",
												"507295"
											]
										}
									},
									"response": []
								},
								{
									"name": "disable transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"pm.environment.set(\"Day\", timestamp.getDate());\r",
													"pm.environment.set(\"Month\", timestamp.getMonth()+1);\r",
													"pm.environment.set(\"hour\",timestamp.getHours());\r",
													"pm.environment.set(\"min\",timestamp.getMinutes());\r",
													"pm.environment.set(\"sec\",timestamp.getSeconds());\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"// \"comments\": \"{{Month}}{{Day}}-{{hour}}{{min}}{{sec}}-{{envName}}\",\r",
													"// transportOper 1338-1339\r",
													"// 注释      // 下发配置\r",
													"//      hdtManageService.modifyTransport(newTransport);\r",
													"//      hdtManageService.hdtConfModifyConf(newTransport);\r",
													"// TransporrtOperService 1252-1284 注释\r",
													"\r",
													"//1180      upgradeIpVersion(newTransport, oldTransport, newDispDomain);\r",
													"//1163      DispatchDomain newDispDomain = modifyCname(mtEvent, newTransport, oldTransport, newCnameRecordId, userCode);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnpYQ0ZaUUZqN0s0cGk2UG9tKzVIR3BnQ0ZEcz0=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    514048,\r\n    514049,\r\n    514050\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/transport/disable",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport",
												"disable"
											]
										}
									},
									"response": []
								},
								{
									"name": "删transport(status==0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"//var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnhGVWdFMlJXWktrcFBVMEdleUQzV0RLR1hYQT0=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/transport/505365",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport",
												"505365"
											]
										}
									},
									"response": []
								},
								{
									"name": "根据多个ID查transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/transport?customerIds=2,3,4",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport"
											],
											"query": [
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.baidu.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessDomainLike",
													"value": "accessDomainLike",
													"disabled": true
												},
												{
													"key": "TRanSportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "liMiT",
													"value": "1",
													"disabled": true
												},
												{
													"key": "customerId",
													"value": "2",
													"disabled": true
												},
												{
													"key": "transportName",
													"value": "transportName",
													"disabled": true
												},
												{
													"key": "transportCode",
													"value": "transportCode",
													"disabled": true
												},
												{
													"key": "cName",
													"value": "cName",
													"disabled": true
												},
												{
													"key": "shieldHostLike",
													"value": "shieldHostLike",
													"disabled": true
												},
												{
													"key": "cNameRecordId",
													"value": "2",
													"disabled": true
												},
												{
													"key": "transportCodeEq",
													"value": "transportCodeEq",
													"disabled": true
												},
												{
													"key": "transportId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "transportIds",
													"value": "1,2,3,4",
													"disabled": true
												},
												{
													"key": "status",
													"value": "1",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "21",
													"disabled": true
												},
												{
													"key": "customerIds",
													"value": "2,3,4"
												},
												{
													"key": "useStandardPort",
													"value": "http",
													"disabled": true
												},
												{
													"key": "targetDomainLike",
													"value": "targetDomainLike",
													"disabled": true
												},
												{
													"key": "exitIp",
													"value": "1.0.0.9",
													"disabled": true
												},
												{
													"key": "carryClientIp",
													"value": "1",
													"disabled": true
												},
												{
													"key": "transferStrategyNam",
													"value": "transferStrategyNam",
													"disabled": true
												},
												{
													"key": "transportStatus",
													"value": "1",
													"disabled": true
												},
												{
													"key": "createBy",
													"value": "createBy",
													"disabled": true
												},
												{
													"key": "updateBy",
													"value": "updateBy",
													"disabled": true
												},
												{
													"key": "transportStrategy",
													"value": "transportStrategy1,transportStrategy2",
													"disabled": true
												},
												{
													"key": "originTransportId",
													"value": "111",
													"disabled": true
												},
												{
													"key": "dispatchDomain",
													"value": "dispatchDomain",
													"disabled": true
												},
												{
													"key": "transportStrategy",
													"value": "topquick",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查transport history",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOkhhRzQwVW5HS2pIb2FQUE8ycHBGeG1SaVJUUT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/transport/501861/history?limit=2&start=1",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"transport",
												"501861",
												"history"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "2",
													"description": "可选"
												},
												{
													"key": "start",
													"value": "1",
													"description": "可选"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "user",
							"item": [
								{
									"name": "current",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"console.log(apikey)\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/rest/user/current",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"rest",
												"user",
												"current"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查询邀请信息",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"console.log(apikey)\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/rest/portalUser/invataion/4SXj4w6Pbd",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"rest",
												"portalUser",
												"invataion",
												"4SXj4w6Pbd"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "report",
							"item": [
								{
									"name": "查report",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/REquests?datefrOm=2021-12-12T16:00:00&dAteto=2021-12-12T17:00:00&intervaL=daily",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"REquests"
											],
											"query": [
												{
													"key": "accessDomain",
													"value": "*.test.com:80",
													"disabled": true
												},
												{
													"key": "datefrOm",
													"value": "2021-12-12T16:00:00"
												},
												{
													"key": "dAteto",
													"value": "2021-12-12T17:00:00"
												},
												{
													"key": "intervaL",
													"value": "daily",
													"description": "可以为空"
												},
												{
													"key": "timezone",
													"value": "-12",
													"description": "UTC+n(<-12<=n<=12)或单独一个数字",
													"disabled": true
												},
												{
													"key": "timezoneOffset",
													"value": "2",
													"description": "检测bindException的其他异常信息",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "95值和日均值",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/bandwidth?timezone=8&accessDomain=&datefrom=2022-11-04T04:31:17&dateto=2022-11-04T07:31:17",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"bandwidth"
											],
											"query": [
												{
													"key": "accessDomain",
													"value": "*.test.com:80",
													"disabled": true
												},
												{
													"key": "timezone",
													"value": "-12",
													"description": "UTC+n(<-12<=n<=12)或单独一个数字",
													"disabled": true
												},
												{
													"key": "timezoneOffset",
													"value": "2",
													"description": "检测bindException的其他异常信息",
													"disabled": true
												},
												{
													"key": "transport",
													"value": "",
													"disabled": true
												},
												{
													"key": "interval",
													"value": "1m",
													"disabled": true
												},
												{
													"key": "timezone",
													"value": "8"
												},
												{
													"key": "accessDomain",
													"value": ""
												},
												{
													"key": "datefrom",
													"value": "2022-11-04T04:31:17"
												},
												{
													"key": "dateto",
													"value": "2022-11-04T07:31:17"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查流量比例",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/percentage/1542",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"percentage",
												"1542"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查flow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/flow?datefrom=2022-05-01T00:00:00&interval=fiveminutes&dateto=2022-05-01T03:59:59",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"flow"
											],
											"query": [
												{
													"key": "AcceSsDomain",
													"value": "*.test.com:80",
													"disabled": true
												},
												{
													"key": "datefrom",
													"value": "2022-05-01T00:00:00"
												},
												{
													"key": "interval",
													"value": "fiveminutes",
													"description": "可以为空"
												},
												{
													"key": "timezonE",
													"value": "8",
													"description": "UTC+n(<-12<=n<=12)或单独一个数字",
													"disabled": true
												},
												{
													"key": "timezoneoffseT",
													"value": "2",
													"description": "检测bindException的其他异常信息",
													"disabled": true
												},
												{
													"key": "trAnsport",
													"value": "transport",
													"disabled": true
												},
												{
													"key": "customerids",
													"value": "1,4,6,3",
													"disabled": true
												},
												{
													"key": "accessDomAins",
													"value": "1.3.4.5,5.6.5.4",
													"disabled": true
												},
												{
													"key": "transProtocolType",
													"value": "transProtocolType",
													"disabled": true
												},
												{
													"key": "reportRAnge",
													"value": "reportRange",
													"disabled": true
												},
												{
													"key": "transPortIds",
													"value": "11233,44333,98789,33333,233322",
													"disabled": true
												},
												{
													"key": "serviceIPs",
													"value": "1.0.0.0,9.0.0.0,9.0.9.0",
													"disabled": true
												},
												{
													"key": "vpl",
													"value": "all",
													"disabled": true
												},
												{
													"key": "repoRtType",
													"value": "reportType",
													"disabled": true
												},
												{
													"key": "cusTomerId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "dateto",
													"value": "2022-05-01T03:59:59"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "flow/domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "On-behalf-of",
												"value": "32050",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/flow/domain?datefrom=2023-01-13T06:34:18&dateto=2023-01-13T15:24:18&interval=fiveminutes&timezone=UTC8&accessDomain=webedi.application.prd.supplyon.com;supportcenter.supplyon.com&preciseAccessDomain=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"flow",
												"domain"
											],
											"query": [
												{
													"key": "datefrom",
													"value": "2023-01-13T06:34:18"
												},
												{
													"key": "dateto",
													"value": "2023-01-13T15:24:18"
												},
												{
													"key": "interval",
													"value": "fiveminutes"
												},
												{
													"key": "timezone",
													"value": "UTC8"
												},
												{
													"key": "accessDomain",
													"value": "webedi.application.prd.supplyon.com;supportcenter.supplyon.com"
												},
												{
													"key": "preciseAccessDomain",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "requests/domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "On-behalf-of",
												"value": "32050",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/requests/domain?datefrom=2023-01-13T06:34:18&dateto=2023-01-13T15:24:18&interval=fiveminutes&accessDomain=cms.application.prd.supplyon.com;iqs.application.prd.supplyon.com&preciseAccessDomain=1",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"requests",
												"domain"
											],
											"query": [
												{
													"key": "datefrom",
													"value": "2023-01-13T06:34:18"
												},
												{
													"key": "dateto",
													"value": "2023-01-13T15:24:18"
												},
												{
													"key": "interval",
													"value": "fiveminutes"
												},
												{
													"key": "accessDomain",
													"value": "cms.application.prd.supplyon.com;iqs.application.prd.supplyon.com"
												},
												{
													"key": "preciseAccessDomain",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查billingData",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"billingItems\":[\r\n      {\"id\":\"domains-base\"},\r\n      {\"id\":\"service-regions\"},\r\n      {\"id\":\"ports-80-443\"},\r\n      {\"id\":\"ports-non-80-443\"},\r\n      {\"id\":\"traffic-gb\"},\r\n      {\"id\":\"vpl-bandwidth-mbps\"},\r\n      {\"id\":\"dedicated-ip-domains\"},\r\n      {\"id\":\"raw-log-download-mb\"}\r\n   ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/report/billingData?datefrOm=2022-02-01T00:00:00&dAteTo=2022-02-28T23:59:59",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"billingData"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "datefrOm",
													"value": "2022-02-01T00:00:00"
												},
												{
													"key": "dAteTo",
													"value": "2022-02-28T23:59:59"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/requests?interval=fiveminutes&accessDomains=cms.application.prd.supplyon.com&datefrom=2023-01-13T06:34:18&dateto=2023-01-13T15:24:18",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"requests"
											],
											"query": [
												{
													"key": "AcceSsDomain",
													"value": "*.test.com:80",
													"disabled": true
												},
												{
													"key": "inteRvaL",
													"value": "monthly",
													"description": "可以为空",
													"disabled": true
												},
												{
													"key": "timezonE",
													"value": "8",
													"description": "UTC+n(<-12<=n<=12)或单独一个数字",
													"disabled": true
												},
												{
													"key": "timezoneoffseT",
													"value": "2",
													"description": "检测bindException的其他异常信息",
													"disabled": true
												},
												{
													"key": "trAnsport",
													"value": "transport",
													"disabled": true
												},
												{
													"key": "customerids",
													"value": "1,4,6,3",
													"disabled": true
												},
												{
													"key": "transProtocolType",
													"value": "transProtocolType",
													"disabled": true
												},
												{
													"key": "reportRAnge",
													"value": "reportRange",
													"disabled": true
												},
												{
													"key": "transPortIds",
													"value": "11233,44333,98789,33333,233322",
													"disabled": true
												},
												{
													"key": "serviceIPs",
													"value": "1.0.0.0,9.0.0.0,9.0.9.0",
													"disabled": true
												},
												{
													"key": "vpL",
													"value": "vpl",
													"disabled": true
												},
												{
													"key": "repoRtType",
													"value": "reportType",
													"disabled": true
												},
												{
													"key": "cusTomerId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "interval",
													"value": "fiveminutes"
												},
												{
													"key": "accessDomains",
													"value": "cms.application.prd.supplyon.com"
												},
												{
													"key": "datefrom",
													"value": "2023-01-13T06:34:18"
												},
												{
													"key": "dateto",
													"value": "2023-01-13T15:24:18"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查access-domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/access-domain?daTefrom=2022-03-31T16:00:00&Dateto=2022-04-21T03:18:07&reportrange=self-only",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"access-domain"
											],
											"query": [
												{
													"key": "daTefrom",
													"value": "2022-03-31T16:00:00"
												},
												{
													"key": "Dateto",
													"value": "2022-04-21T03:18:07"
												},
												{
													"key": "reportrange",
													"value": "self-only"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查transport",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/transport?daTeto=2022-04-11T03:18:07&reportRAnge=self-only",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"transport"
											],
											"query": [
												{
													"key": "datefroM",
													"value": "2022-03-31T16:00:00",
													"disabled": true
												},
												{
													"key": "daTeto",
													"value": "2022-04-11T03:18:07"
												},
												{
													"key": "accessDoMains",
													"value": "0720-01.access.com",
													"disabled": true
												},
												{
													"key": "reportRAnge",
													"value": "self-only"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "requestSummary",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "On-behalf-of",
												"value": "32050",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/summary/requests?groupBy=accessDomain&datefrom=2023-01-13T06:34:18&dateto=2023-01-13T15:24:18",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"summary",
												"requests"
											],
											"query": [
												{
													"key": "groupBy",
													"value": "accessDomain"
												},
												{
													"key": "scope",
													"value": "vpl\n",
													"disabled": true
												},
												{
													"key": "datefrom",
													"value": "2023-01-13T06:34:18"
												},
												{
													"key": "dateto",
													"value": "2023-01-13T15:24:18"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "TopN",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "On-behalf-of",
												"value": "32050",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/report/topAccessDomains?datefrom=2023-01-13T06:34:18&dateto=2023-01-13T15:24:18",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"report",
												"topAccessDomains"
											],
											"query": [
												{
													"key": "scope",
													"value": "vpl\n",
													"disabled": true
												},
												{
													"key": "datefrom",
													"value": "2023-01-13T06:34:18"
												},
												{
													"key": "dateto",
													"value": "2023-01-13T15:24:18"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "加速区域",
							"item": [
								{
									"name": "查accel region",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/accelRegions",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"accelRegions"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查region",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/region",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"region"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "API Info",
							"item": [
								{
									"name": "获取api info",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/info",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"info"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ServiceQuota",
							"item": [
								{
									"name": "查resourceSummary",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"// var apikey=\"iquPa13eXk1hARdSG4JU1f6IhJHzXur1fbztuGPKz7w=a\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/resourceSummary?customerId=3366",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"resourceSummary"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												},
												{
													"key": "customerId",
													"value": "3366"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查service quotas",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/serviceQuotas?status=trial&contractID=&accountManagerEmail=&offset=0&limit=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"serviceQuotas"
											],
											"query": [
												{
													"key": "status",
													"value": "trial"
												},
												{
													"key": "contractID",
													"value": ""
												},
												{
													"key": "accountManagerEmail",
													"value": ""
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "limit",
													"value": "2"
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "overdue",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											},
											{
												"key": "serviceQuotaList",
												"value": "280",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\"280\"]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/serviceQuotas/overdue",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"serviceQuotas",
												"overdue"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增service quota",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"var year = timestamp.getFullYear(),\r",
													"\t\tmonth = timestamp.getMonth()+1,//月份是从0开始的\r",
													"\t\tday = timestamp.getDate(),\r",
													"\t\thour = timestamp.getHours(),\r",
													"\t\tmin = timestamp.getMinutes(),\r",
													"\t\tsec = timestamp.getSeconds();\r",
													"        var newTime = year + \r",
													"\t\t\t\t(month < 10? '0' + month : month) + \r",
													"\t\t\t\t(day < 10? '0' + day : day) + '-' +\r",
													"\t\t\t\t(hour < 10? '0' + hour : hour) +\r",
													"\t\t\t\t(min < 10? '0' + min : min) + \r",
													"\t\t\t\t(sec < 10? '0' + sec : sec);\r",
													"pm.environment.set(\"Day\", timestamp.getDate());\r",
													"pm.environment.set(\"Month\", timestamp.getMonth()+1);\r",
													"pm.environment.set(\"hour\",timestamp.getHours());\r",
													"pm.environment.set(\"min\",timestamp.getMinutes());\r",
													"pm.environment.set(\"sec\",timestamp.getSeconds());\r",
													"pm.environment.set(\"newtime\",newTime);\r",
													"// pm.environment.set(\"Day\", timestamp.getDate());\r",
													"\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"//Long customerId=1542L;\r",
													"//String userCode=\"hdtteamaccount-api\";\r",
													"//TransportOperService 560-565 注释\r",
													"//  if (StringUtils.isNotBlank(transport.getUseStandardPort())) {\r",
													"        // \t  cNameRecordId = createCnameForPortReuseTransport(transport, transList, userCode, ctEvent);\r",
													"        //   } else {\r",
													"        // \t  accessIp = createMapForOthersTransport(transport, transList, tcpPorts, udpPorts, accessViewDefaultId, userCode, ctEvent);\r",
													"        // \t  cNameRecordId = transport.getCNameRecordId();\r",
													"        // }\r",
													"// 607、609注释\r",
													"//      hdtManageService.createTransport(trans);\r",
													"//        hdtManageService.hdtConfModifyConf(trans);\r",
													"\r",
													"// <transport>\r",
													"//     <comments>test applicationProtocol</comments>\r",
													"//     <transportStatus>1</transportStatus>\r",
													"//     <ipVersion>1</ipVersion>\r",
													"//     <portRange>80|0;</portRange>\r",
													"//     <targetDomain>www.td1008-1.com</targetDomain>\r",
													"//     <accessDomain>www.ad1008-1.com</accessDomain>\r",
													"//     <accessPort>80</accessPort>\r",
													"//     <dedicatedIpService>0</dedicatedIpService>\r",
													"//     <transportStrategy>topquick</transportStrategy>\r",
													"//     <carryClientIp>1</carryClientIp>\r",
													"//     <speedLimit>12</speedLimit>\r",
													"//     <concurrentLimit>1</concurrentLimit>\r",
													"//     <cName>1008-1.shland.com</cName>\r",
													"//     <cNameViews>11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045</cNameViews>\r",
													"//     <accelRegions>Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita, SouthAfrica_OtherCountry</accelRegions>\r",
													"//     <ipWhiteList>12.32.23.33</ipWhiteList>\r",
													"//     <ipBlackList>13.43.33.23</ipBlackList>\r",
													"//     <hasICP>0</hasICP>\r",
													"//     <hasPSB>0</hasPSB>\r",
													"//     <applicationProtocol>http</applicationProtocol>\r",
													"//     <useFtp>0</useFtp>\r",
													"// </transport>\r",
													"\r",
													"\r",
													"\r",
													"// {\r",
													"  \r",
													"//     \"comments\": \"test applicationProtocol\",\r",
													"//     \"transportStatus\": \"1\",\r",
													"//     \"ipVersion\": \"1\",\r",
													"//     \"portRange\": \"80|0;\",\r",
													"//     \"targetDomain\": \"www.td1008-2.com\",\r",
													"//     \"accessDomain\": \"www.ad1008-2.com\",\r",
													"//     \"accessPort\": \"80\",\r",
													"//     \"dedicatedIpService\": \"0\",\r",
													"//     \"transportStrategy\": \"topquick\",\r",
													"//     \"carryClientIp\": \"1\",\r",
													"//     \"speedLimit\": \"12\",\r",
													"//     \"concurrentLimit\": \"1\",\r",
													"//     \"cName\": \"1008-2.shland.com\",\r",
													"//     \"cNameViews\": \"11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045\",\r",
													"//     \"accelRegions\": \"Africa, Africa_East, Africa_West, Africa_South, SouthAfrica, ZA_South, ZA_North, Africa_North, Africa_Middle, Africa_qita, SouthAfrica_OtherCountry\",\r",
													"//     \"ipWhiteList\": \"12.32.23.33\",\r",
													"//     \"ipBlackList\": \"13.43.33.23\",\r",
													"//     \"hasICP\": \"0\",\r",
													"//     \"hasPSB\": \"0\",\r",
													"//     \"applicationProtocol\": \"http\",\r",
													"//     \"useFtp\": \"0\"\r",
													"  \r",
													"// }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/xml",
												"type": "text",
												"disabled": true
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											},
											{
												"key": "customerId",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"customerID\": \"32050\",\r\n    \"status\": \"trial\",\r\n    \"trialDeadline\": \"2022-09-25T15:00:00Z\",\r\n    \"billUsingStripe\": false,\r\n    \"description\": \"this is a demo service quota\",\r\n    \"resourceQuotas\": {\r\n        \"transportsLimit\": 2,\r\n        \"trafficVolumeLimit\": 2000,\r\n        \"allowVirtualPrivateLine\": 1,\r\n        \"allowDedicatedIPService\": 1,\r\n        \"allowRawLogDownload\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/serviceQuotas",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"serviceQuotas"
											]
										}
									},
									"response": []
								},
								{
									"name": "查某个service quota",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/serviceQuotas/customer/320",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"serviceQuotas",
												"customer",
												"320"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "删除serviceQuota",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/serviceQuotas/1435",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"serviceQuotas",
												"1435"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Notification",
							"item": [
								{
									"name": "查notifications",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/notification",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"notification"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limiT",
													"value": "1",
													"disabled": true
												},
												{
													"key": "Start",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "增notification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"unit-test-title\",\r\n    \"type\": 1,\r\n    \"receiverId\": 3366,\r\n    \"content\": \"unit-test-content\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/hdt/v1/notification",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"notification"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "pop",
							"item": [
								{
									"name": "查pop",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/pop/status",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"pop",
												"status"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "customer",
							"item": [
								{
									"name": "查customer By cid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/auth/customer?CID=110",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"auth",
												"customer"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												},
												{
													"key": "CID",
													"value": "110"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查customers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/auth/customer-infos",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"auth",
												"customer-infos"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查vpl",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/customer/vpl",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"customer",
												"vpl"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "查 customer cname",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/customer/cname",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"customer",
												"cname"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												},
												{
													"key": "cNameREcordId",
													"value": "11603123",
													"disabled": true
												},
												{
													"key": "cNaMe",
													"value": "test45.test.99.com.1014371.shland.com",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "common",
							"item": [
								{
									"name": "查icp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{userName}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{pwd2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/hdt/v1/icp?doMain=www.baidu.com",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"v1",
												"icp"
											],
											"query": [
												{
													"key": "doMain",
													"value": "www.baidu.com"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "role",
							"item": [
								{
									"name": "获取角色列表",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var CryptoJS = require('crypto-js');\r",
													"var timestamp=new Date();\r",
													"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
													"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";\r",
													"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";\r",
													"var apikey=pm.environment.get(\"apikey\");\r",
													"\r",
													"// var DEFAULT_KEY = new byte[] { -97, 88, -94, 9, 70,\r",
													"// \t\t\t-76, 126, 25, 0, 3, -20, 113, 108, 28, 69, 125 };\r",
													"// var str=HEX.hexToString(apikey);\r",
													"// console.log(str)\r",
													"// var key=[-97, 88, -94, 9, 70,-76, 126, 25, 0, 3, -20, 113, 108, 28, 69,125];\r",
													"// var str2=CryptoJS.AES.decrypt(apikey,key,{mode:CryptoJS.mode.ECB,padding:CryptoJS.pad.Pkcs7});\r",
													"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
													"// var pwd=`echo -en \"$nowtime\" | openssl dgst -sha1 -hmac $apikey -binary | openssl enc -base64`;\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"// // console.info(pwd);\r",
													"// console.log(pwd);\r",
													"console.log((new Date(timestamp)).toUTCString());\r",
													"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");\r",
													"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);\r",
													"\r",
													"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
													"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));\r",
													"\r",
													"\r",
													"\r",
													"//integration\r",
													"//user:nixqa\r",
													"//apikey:5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Date",
												"value": "{{nowtime}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Encoding",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOnVTZzFQeHF0THo5YTluTWNqV0NKclo2RVlnRT0=",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{url}}/hdt/rest/role",
											"host": [
												"{{url}}"
											],
											"path": [
												"hdt",
												"rest",
												"role"
											],
											"query": [
												{
													"key": "transportType",
													"value": "ipport",
													"disabled": true
												},
												{
													"key": "start",
													"value": "7",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "4",
													"disabled": true
												},
												{
													"key": "accessDomain",
													"value": "www.ad.com",
													"disabled": true
												},
												{
													"key": "targetPort",
													"value": "80",
													"disabled": true
												},
												{
													"key": "targetDomain",
													"value": "www.test.com",
													"disabled": true
												},
												{
													"key": "accessPort",
													"value": "443",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "{{pwd2}}",
								"type": "string"
							},
							{
								"key": "username",
								"value": "{{userName}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"var timestamp=new Date();",
									"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());",
									"// var apikey=\"xseYkkezv48hRjd7h4a5LzoyfgYeyX\";",
									"// var apikey=\"5%Uus6nh/oyCwYVf3*vhXnB7gkgv+M\";",
									"var apikey=pm.environment.get(\"apikey\");",
									"",
									"console.log((new Date(timestamp)).toUTCString());",
									"console.log(apikey)",
									"// var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"Vn4HXh0C0P\");",
									"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),apikey);",
									"",
									"console.info(CryptoJS.enc.Base64.stringify(pwd));",
									"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "clouddns",
					"item": [
						{
							"name": "查cname",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var CryptoJS = require('crypto-js');\r",
											"var timestamp=new Date();\r",
											"pm.environment.set(\"nowtime\", (new Date(timestamp)).toUTCString());\r",
											"console.log((new Date(timestamp)).toUTCString());\r",
											"\r",
											"var pwd=CryptoJS.HmacSHA1((new Date(timestamp)).toUTCString(),\"DwvhII3NHK\");\r",
											"\r",
											"console.info(CryptoJS.enc.Base64.stringify(pwd));\r",
											"\r",
											"pm.environment.set(\"pwd2\", CryptoJS.enc.Base64.stringify(pwd));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{pwd2}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "QuantilHdt_test",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Date",
										"value": "{{nowtime}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Encoding",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic aGR0dGVhbWFjY291bnQtYXBpOmgxMDZyM2RESlBjeEQzaW0yUjFqdnZ6TW9MTT0=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"dcName\":\"cname-20220311-181223-qa.shland.com\",\r\n    \"domainName\":\"shland.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://open.chinanetcenter.com/clouddns/QueryRecords",
									"protocol": "https",
									"host": [
										"open",
										"chinanetcenter",
										"com"
									],
									"path": [
										"clouddns",
										"QueryRecords"
									],
									"query": [
										{
											"key": "transportType",
											"value": "ipport",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}